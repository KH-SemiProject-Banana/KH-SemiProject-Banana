<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">
	<!-- namespace 속성 : 현재 공간(영역)에 대한 이름(반드시 지정!) -->

	<resultMap type="Member" id="member_rm">
   
   		<id property="memberNo" column="MEMBER_NO"/>
   		
   		<result property="memberEmail" column="MEMBER_EMAIL"></result>
   		<result property="memberPw" column="MEMBER_PW"></result>
   		<result property="memberName" column="MEMBER_NAME"></result>
   		<result property="memberNickname" column="MEMBER_NICKNAME"></result>
   		<result property="introduce" column="INTRODUCE"></result>
   		<result property="memberTel" column="MEMBER_TEL"></result>
   		<result property="memberAddress" column="MEMBER_ADDRESS"></result>
   		<result property="profileImage" column="PROFILE_IMG"></result>
   		<result property="enrollDate" column="ENROLL_DATE"></result>
   		<result property="memberDeleteFlag" column="MEMBER_DEL_FL"></result>
   		<result property="authority" column="AUTHORITY"></result>
   		<result property="blockFlag" column="BLOCK_FL"></result>
   		<result property="memberBirth" column="BIRTHDAY"></result>
   		<result property="manner" column="MANNER"></result>
  
  		<result property="remainPay" column="REMAIN_PAY"></result>
  		<result property="sellCount" column="SELL_COUNT"></result>
  		<result property="buyCount" column="BUY_COUNT"></result>
  		<result property="boardBlockCount" column="BOARD_BL_COUNT"></result>
  		<result property="userBlockCount" column="USER_BL_COUNT"></result>
  
 	 </resultMap>
 	 
 	 <resultMap type="UserBlock" id="userBlock_rm">
 	 	<result property="userBlocker" column="USER_BLOCKER"></result>
  		<result property="userBlocked" column="USER_BLOCKED"></result>
 	 </resultMap>

 	 




	<!-- 로그인 기능 -->
	<select id="login" parameterType="string" resultMap="member_rm">
		SELECT MEMBER_NO, MEMBER_EMAIL, MEMBER_PW, MEMBER_NICKNAME, INTRODUCE, BLOCK_FL,
		MEMBER_TEL,MEMBER_NAME,
		MEMBER_ADDRESS, PROFILE_IMG, AUTHORITY,
		TO_CHAR(ENROLL_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') AS ENROLL_DATE,
		BIRTHDAY, MANNER, AUTHORITY
		FROM "MEMBER"
		WHERE MEMBER_DEL_FL = 'N'
		<!-- AND BLOCK_FL = 'N' -->
		AND MEMBER_EMAIL = #{memberEmail}
	</select>



	<!-- 회원가입 입력 정보 제출 서비스 -->
	<insert id="signUp" parameterType="Member">
		INSERT INTO "MEMBER"
		VALUES (SEQ_MEMBER_NO.NEXTVAL,
		#{memberEmail},#{memberPw},#{memberName},#{memberNickname},
		DEFAULT,#{memberTel},#{memberAddress},NULL,DEFAULT,DEFAULT,DEFAULT,
		DEFAULT,#{memberBirth},DEFAULT)
	</insert>

	<!-- 관리자 로그인 서비스 -->
	<select id="managerLogin" parameterType="string"
		resultMap="member_rm">
		SELECT MEMBER_NO, MEMBER_EMAIL, MEMBER_PW, MEMBER_NICKNAME, INTRODUCE,
		MEMBER_TEL,
		MEMBER_ADDRESS, PROFILE_IMG,
		TO_CHAR(ENROLL_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') AS ENROLL_DATE,
		BIRTHDAY, MANNER
		FROM "MEMBER"
		WHERE MEMBER_DEL_FL = 'N'
		AND BLOCK_FL = 'N'
		AND AUTHORITY = 2
		AND MEMBER_EMAIL = #{memberEmail}
	</select>

	<!-- 회원 ID/PW 찾기 회원조회 -->
	<select id="infoFindSelect" resultType="string">
		SELECT MEMBER_EMAIL
		FROM "MEMBER"
		WHERE MEMBER_NAME = #{memberName}
		AND MEMBER_TEL =#{memberTel}
		AND BLOCK_FL = 'N'
		AND MEMBER_DEL_FL = 'N'
 	 </select>
 	 
 	 <update id="findEmailPw">
		UPDATE "MEMBER" SET
		MEMBER_PW = #{encPw}
		WHERE MEMBER_EMAIL = #{result}
		AND BLOCK_FL = 'N'
		AND MEMBER_DEL_FL = 'N'
 	 </update>
 	 
 	 
 	 <!-- 관리자) 회원 목록 조회 -->
 	 <select id="admin-memberSearch" parameterType="map" resultMap="member_rm">
 	 	SELECT MEMBER_NO, MEMBER_EMAIL, MEMBER_NICKNAME, MEMBER_NAME, BIRTHDAY, MEMBER_TEL,
		NVL((SELECT REMAIN_POINT FROM REQUEST_PAY R1
		WHERE ORDER_NO = ( SELECT MAX(ORDER_NO) FROM REQUEST_PAY R2
							WHERE R2.TRADER_NO = M.MEMBER_NO)), 0) REMAIN_PAY,
		(SELECT COUNT(*) FROM GOODS_SELL WHERE SELLER_NO = M.MEMBER_NO) SELL_COUNT,
		(SELECT COUNT(*) FROM GOODS_SELL WHERE BUYER_NO = M.MEMBER_NO) BUY_COUNT,
		TO_CHAR(ENROLL_DATE, 'YYYY-MM-DD') ENROLL_DATE,
		(SELECT COUNT(*) FROM BOARD_COMPLAIN WHERE B_COMPLAINED = M.MEMBER_NO) BOARD_BL_COUNT,
		(SELECT COUNT(*) FROM USER_COMPLAIN WHERE U_COMPLAINED = M.MEMBER_NO) USER_BL_COUNT,
		MEMBER_DEL_FL, BLOCK_FL FROM MEMBER M
		WHERE MEMBER_NO > 0
		
		<if test='query != null and query != ""'>
			<choose>
				<when test='key == "email"'>
					AND MEMBER_EMAIL LIKE '%${query}%'
				</when>
				<when test='key == "nickname"'>
					AND MEMBER_NICKNAME LIKE '%${query}%'
				</when>
			</choose>
		</if>
		
		<if test='isDelete != null'>
			<choose>
				<when test='isDelete == "notDelete"'>
					AND MEMBER_DEL_FL = 'N'
				</when>
				<when test='isDelete == "yesDelete"'>
					AND MEMBER_DEL_FL = 'Y'
				</when>
			</choose>
		</if>
		
		<if test='isBlock != null'>
			<choose>
				<when test='isBlock == "notBlock"'>
					AND BLOCK_FL = 'N'
				</when>
				<when test='isBlock == "yesBlock"'>
					AND BLOCK_FL = 'Y'
				</when>
			</choose>
		</if>
		
		<if test='calanderBefore != ""'>
			AND ENROLL_DATE >= TO_DATE(#{calanderBefore}, 'YYYY-MM-DD') 
		</if>
		<if test='calanderAfter != ""'>
			<![CDATA[
			AND ENROLL_DATE <= TO_DATE(#{calanderAfter}, 'YYYY-MM-DD') 
			]]>
		</if>
		
		ORDER BY ${order}
		
 	 </select>
 	 
 	 
 	 <!-- 전체 회원 수 조회 -->
 	 <select id="memberCount" resultType="_int">
 	 	SELECT COUNT(*) FROM MEMBER
 	 </select>
 	 
 	 
 	 <!-- 특정 조건 회원 수 조회 -->
 	 <!-- 관리자) 회원 목록 조회 -->
 	 <select id="getMemberListCount" parameterType="map" resultType="_int">
 	 	SELECT COUNT(*) FROM MEMBER M
		WHERE MEMBER_NO > 0
		
		<if test='query != null and query != ""'>
			<choose>
				<when test='key == "email"'>
					AND MEMBER_EMAIL LIKE '%${query}%'
				</when>
				<when test='key == "nickname"'>
					AND MEMBER_NICKNAME LIKE '%${query}%'
				</when>
			</choose>
		</if>
		
		<if test='isDelete != null'>
			<choose>
				<when test='isDelete == "notDelete"'>
					AND MEMBER_DEL_FL = 'N'
				</when>
				<when test='isDelete == "yesDelete"'>
					AND MEMBER_DEL_FL = 'Y'
				</when>
			</choose>
		</if>
		
		<if test='isBlock != null'>
			<choose>
				<when test='isBlock == "notBlock"'>
					AND BLOCK_FL = 'N'
				</when>
				<when test='isBlock == "yesBlock"'>
					AND BLOCK_FL = 'Y'
				</when>
			</choose>
		</if>
		
		<if test='calanderBefore != ""'>
			AND ENROLL_DATE >= TO_DATE(#{calanderBefore}, 'YYYY-MM-DD') 
		</if>
		<if test='calanderAfter != ""'>
			<![CDATA[
			AND ENROLL_DATE <= TO_DATE(#{calanderAfter}, 'YYYY-MM-DD') 
			]]>
		</if>
		
 	 </select>
 	 
 	 
 	 <!-- 관리자 기능) 회원 정보 수정 -->
 	 <update id="memberEdit">
 	 	UPDATE "MEMBER" SET
 	 	MEMBER_NICKNAME = #{memberNickname},
 	 	MEMBER_NAME = #{memberName},
 	 	BIRTHDAY = #{memberBirth},
 	 	MEMBER_TEL = #{memberTel}
 	 	WHERE MEMBER_NO = #{memberNo}
 	 </update>
 	 
 	 
 	 <!-- 관리자 기능) 회원 정보 삭제 -->
 	 <update id="memberDelete">
 	 	UPDATE "MEMBER" SET
 	 	MEMBER_DEL_FL = 'Y'
 	 	WHERE MEMBER_NO = #{memberNo}
 	 </update>
 	 
 	 
 	 <!-- 관리자 기능) 회원 정보 삭제 복구 -->
 	 <update id="memberDeleteBack">
 	 	UPDATE "MEMBER" SET
 	 	MEMBER_DEL_FL = 'N'
 	 	WHERE MEMBER_NO = #{memberNo}
 	 </update>
 	 
 	 
 	 <!-- 관리자 기능) 회원 차단 -->
 	 <update id="memberBlock">
 	 	UPDATE "MEMBER" SET
 	 	BLOCK_FL = 'Y'
 	 	WHERE MEMBER_NO = #{memberNo}
 	 </update>
 	 
 	 <!-- 관리자 기능) 회원 차단해제 -->
 	 <update id="memberBlockBack">
 	 	UPDATE "MEMBER" SET
 	 	BLOCK_FL = 'N'
 	 	WHERE MEMBER_NO = #{memberNo}
 	 </update>
 	 


	<!-- 회원탈퇴 회원 조회 -->
	<select id="secessionSelect" parameterType="_int"
		resultMap="member_rm">
		SELECT MEMBER_EMAIL, MEMBER_PW, MEMBER_NAME
		FROM "MEMBER"
		WHERE MEMBER_NO = #{memberNo}
	</select>

	<!-- 회원 탈퇴 -->
	<update id="secessionDelete">
		UPDATE "MEMBER" SET
		MEMBER_DEL_FL = 'Y'
		WHERE MEMBER_NO = #{memberNo}
	</update>
 	 
 	 
 	 
 	<!-- 차단 관리 -->
 	<select id="selectDeleteMemberList" resultMap="member_rm">
 		SELECT MEMBER_NO, MEMBER_NICKNAME, PROFILE_IMG, INTRODUCE FROM "MEMBER" M
		WHERE MEMBER_NO = (SELECT USER_BLOCKED FROM USER_BLOCK WHERE USER_BLOCKER = #{memberNo})
 	</select>
 	
 	
 	<!-- 차단 취소 -->
 	<delete id="memberBlockCancel" parameterType="map">
 		DELETE FROM USER_BLOCK
 		WHERE USER_BLOCKED = #{blockedMemberNo}
 		AND USER_BLOCKER = #{loginMemberNo}
 	</delete>
  
</mapper>
